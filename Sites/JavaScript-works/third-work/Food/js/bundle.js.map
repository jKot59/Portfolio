{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,iCAAiC,OAAO;AACxC,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iEAAe,UAAU,EAAC;;;;;;;;;;;;;;;AChJ1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,UAAU,MAAM,SAAS;AACxD,sDAAsD,cAAc;AACpE,oDAAoD,iBAAiB;AACrE;AACA;AACA;AACA,8DAA8D,WAAW;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,KAAK,aAAa,WAAW;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iCAAiC;AAC/D;AACA,gBAAgB;AAChB,YAAY;AACZ;AACA;AACA;AACA,gCAAgC,iCAAiC;AACjE;AACA,qBAAqB;AACrB;AACA,SAAS;AACT;AACA;AACA,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;;;;;AC/ErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;;ACnFsC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D,sBAAsB,KAAK;AAC3B;AACA;AACA;AACA,OAAO,sDAAkB;AACzB;AACA,OAAO,iDAAS,CAAC,+CAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kDAAU;AACrB;AACA;AACA,SAAS;AACT;AACA;AACA,QAAQ,gEAA4B;AACpC;AACA,gBAAgB,kDAAU;AAC1B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,QAAQ,EAAC;;;;;;;;;;;;;;;ACvGxB,kBAAkB,uDAAuD;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,OAAO;AACxD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,OAAO;AACxE;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wBAAwB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,iEAAe,MAAM,EAAC;;;;;;;;;;;;;;;AC3ItB;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA,eAAe;AACf,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,gCAAgC;AAChC;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,IAAI,EAAC;;;;;;;;;;;;;;;AC9CpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,SAAS;AAC/B,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK,EAAC;;;;;;;UC7DrB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACN2C;AACE;AACE;AACI;AACN;AACA;AACU;AACvD;AACA;AACA;AACA;AACA,IAAI,8DAAI;AACR,IAAI,+DAAK;AACT,IAAI,kEAAQ;AACZ,IAAI,+DAAK;AACT,IAAI,+DAAK;AACT,IAAI,oEAAU;AACd,IAAI,gEAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC,E","sources":["webpack://dist/./dist/js/modules/calculator.js","webpack://dist/./dist/js/modules/cards.js","webpack://dist/./dist/js/modules/modal.js","webpack://dist/./dist/js/modules/requests.js","webpack://dist/./dist/js/modules/slider.js","webpack://dist/./dist/js/modules/tabs.js","webpack://dist/./dist/js/modules/timer.js","webpack://dist/webpack/bootstrap","webpack://dist/webpack/runtime/define property getters","webpack://dist/webpack/runtime/hasOwnProperty shorthand","webpack://dist/webpack/runtime/make namespace object","webpack://dist/./js/scrip1.js"],"sourcesContent":["function calculator() {\r\n    // получаем элементы с DOM\r\n    const calculator = document.querySelector('.calculating__field'),\r\n          gender = document.querySelector('#gender'),\r\n          genderBtn = gender.querySelectorAll('.calculating__choose-item'),\r\n          physActive = calculator.querySelector('.calculating__choose_big'),\r\n          physActiveBtns = physActive.querySelectorAll('.calculating__choose-item'),\r\n          heightInput = calculator.querySelector('#height'),\r\n          weightInput = calculator.querySelector('#weight'),\r\n          ageInput = calculator.querySelector('#age'),\r\n          resultDiv = calculator.querySelector('.calculating__result span'),\r\n        // массив с коэф. активности\r\n          activityArray = [1.2, 1.375, 1.55, 1.725, 1.9];\r\n\r\n    // переменные для значений\r\n    let sex,\r\n    activity, \r\n    height, \r\n    weight, \r\n    age, \r\n    result;\r\n\r\n    // устанавливаем кнопки из локального хранилища\r\n    buttons();\r\n    // рассчитываем сразу значение\r\n    refreshCalc();\r\n\r\n    // выбираем пол делигированием\r\n    gender.addEventListener('click', e => {\r\n        if(e.target.matches('.calculating__choose-item')) {\r\n            // перебираем кнопки\r\n            genderBtn.forEach( (item, i ) => {\r\n                // убираем класс активности\r\n                item.classList.remove('calculating__choose-item_active');\r\n                // добавляе класс активнсти кнопке-таргету\r\n                if(e.target === item) {\r\n                    item.classList.add('calculating__choose-item_active');\r\n                    // добавляем в хранилище информацию\r\n                    localStorage.setItem('sex', i);\r\n                    refreshCalc();\r\n                }\r\n            });\r\n        }\r\n    });\r\n    // выбираем физическую активность\r\n    physActive.addEventListener('click', e => {\r\n        // когда кликнули на кнопку\r\n        if (e.target.matches('.calculating__choose-item')) {\r\n            // переберем все кнопки\r\n            physActiveBtns.forEach( (item, i) => {\r\n                // удалим у всех класс активности\r\n                item.classList.remove('calculating__choose-item_active');\r\n                // если кликнутая кнопка есть в массиве\r\n                if(e.target === item) {\r\n                    // добавим ей класс активности\r\n                    item.classList.add('calculating__choose-item_active');\r\n                    // а в переменную для рассчетов занесем данные из массива\r\n                    activity = activityArray[i];\r\n                    // сохраним в хранилище\r\n                    localStorage.setItem('activity', i);\r\n                    // обновим калькулятор\r\n                    refreshCalc();\r\n                }\r\n            });\r\n        }\r\n    });\r\n    // получаем рост, забираем только цифры и выводим результат\r\n    heightInput.addEventListener('input', () => {\r\n        // убирает возможность пользователя вводить буквы\r\n        height = +heightInput.value.match(/\\d/g).join('');\r\n        localStorage.setItem('height', height);\r\n        refreshCalc();\r\n    });\r\n    // получаем вес, забираем только цифры и выводим результат\r\n    weightInput.addEventListener('input', () => {\r\n        // убирает возможность пользователя вводить буквы\r\n        weight = +weightInput.value.match(/\\d/g).join('');\r\n        localStorage.setItem('weight', weight);\r\n        refreshCalc();\r\n    });\r\n    // получаем возраст, забираем только цифры и выводим результат\r\n    ageInput.addEventListener('input', () => {\r\n        // убирает возможность пользователя вводить буквы\r\n        age = +ageInput.value.match(/\\d/g).join('');\r\n        localStorage.setItem('age', age);\r\n        refreshCalc();\r\n    });\r\n\r\n    /* CALCULATOR FUNCTIONS */\r\n\r\n    // рассчитываем нужно количество ккалорий и записываем в DOM\r\n    function refreshCalc () {\r\n        // записываем значения полей из локал сторэдж\r\n        weightInput.value = localStorage.getItem('weight');\r\n        heightInput.value = localStorage.getItem('height');\r\n        ageInput.value = localStorage.getItem('age');\r\n        height = heightInput.value;\r\n        weight = weightInput.value;\r\n        age = ageInput.value;\r\n        // если кнопка активности есть в локальном хранилище то используем ее для калькулятора\r\n        if (localStorage.getItem('activity')){\r\n            activity = activityArray[localStorage.getItem('activity')]\r\n            // если нету, то подставляем дефолт\r\n        } else {\r\n            activity = activityArray[1];\r\n        }\r\n        // если пол есть в локальном хранилище, то подставляем его\r\n        if (localStorage.getItem('sex')){\r\n            sex = localStorage.getItem('sex')\r\n            // если нету, то подставляем дефолт\r\n        } else {\r\n            sex = 0;\r\n        }\r\n        // выбираем фформулу если 0 то для Женщин, иначе для муЖчин\r\n        if(sex == 0) {\r\n            result = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * activity);\r\n        } else {\r\n            result = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * activity);\r\n        }\r\n        if (height && weight && age) {\r\n        resultDiv.innerHTML = `${result}`;\r\n        } else {\r\n        resultDiv.innerHTML = `0`;\r\n        }\r\n    }\r\n    function buttons () {\r\n    sex = localStorage.getItem('sex');\r\n        if(sex == 1) {\r\n            genderBtn[1].classList.add('calculating__choose-item_active');\r\n            genderBtn[0].classList.remove('calculating__choose-item_active');\r\n        }\r\n\r\n        if(localStorage.getItem('activity')) {\r\n            activity = localStorage.getItem('activity');\r\n            physActiveBtns.forEach( (item, i) => {\r\n                item.classList.remove('calculating__choose-item_active');\r\n                if (i == localStorage.getItem('activity')) {\r\n                    item.classList.add('calculating__choose-item_active');\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default calculator;\r\n","function cards () {\r\n        // создаем конструктор карточек\r\n        class Card {\r\n            // добавляем все свойства для HTML\r\n            constructor(url, altimg, subtitle, description, price, parent, ...classes) {\r\n                this.url = url;\r\n                this.altimg = altimg;\r\n                this.subtitle = subtitle;\r\n                this.description = description;\r\n                this.price = price;\r\n                this.parent = parent;\r\n                this.classes = classes;\r\n                this.currencyRate = 80;\r\n                this.translateCurrency();\r\n            }\r\n            // конвертируем валюту\r\n            translateCurrency() {\r\n                this.price = this.price * this.currencyRate;\r\n            }\r\n            // создаем HTML структуру\r\n            create() {\r\n                // получаем место, куда будет добавлена карточка\r\n                const place = document.querySelector(this.parent),\r\n                // создаем обертку карточки\r\n                      card = document.createElement('div');\r\n                      // применяем значение по умолчанию\r\n                      // если rest массив пустой. длина 0\r\n                if (this.classes.length === 0) {\r\n                    // создаем свойство и добавляем в него класс\r\n                    this.element = 'menu__item';\r\n                    // присваиваем новый класс элементу\r\n                    card.classList.add(this.element);\r\n                } else {\r\n                    // иначе перебираем рест массив и каждый класс добавляем к элементу\r\n                this.classes.forEach(item => card.classList.add(item));\r\n                }\r\n                // добавляем карточку в конец родителя\r\n                place.append(card);\r\n                // сама структура со свойствами\r\n                card.innerHTML = `\r\n                    <img src=${this.url} alt=${this.alt}>\r\n                    <h3 class=\"menu__item-subtitle\">${this.subtitle}</h3>\r\n                    <div class=\"menu__item-descr\">${this.description}</div>\r\n                    <div class=\"menu__item-divider\"></div>\r\n                    <div class=\"menu__item-price\">\r\n                        <div class=\"menu__item-cost\">Цена:</div>\r\n                        <div class=\"menu__item-total\"><span>${this.price}</span> руб/день</div>\r\n                    </div>\r\n                `;\r\n            }\r\n        }\r\n        // получаем данные карточек с сервера\r\n        const getResource = async (url) => {\r\n            const res = await fetch (url);\r\n            if (!res.ok) {\r\n                throw new Error (`Ошибка отправки на сервер ${url} код ошибки ${res.status}`);\r\n            }\r\n            return await res.json();\r\n\r\n        };\r\n\r\n        // создаем карточку из полученных данных\r\n\r\n        // getResource('http://localhost:3000/menu')\r\n        // .then( item => {\r\n        //     item.forEach(({img, altimg, title, descr, price}) => {\r\n        //         new Card(img, altimg, title, descr, price, '.menu .container').create();\r\n        //     });\r\n        // });\r\n        axios.get('http://localhost:3000/menu')\r\n        .then(item => {\r\n            // item это переменная-аргумент где лежат данные с сервера, а  data там лежат обьекты карточек\r\n            item.data.forEach(({img, altimg, title, descr, price}) => {\r\n                        new Card(img, altimg, title, descr, price, '.menu .container').create();\r\n                    });\r\n            \r\n        });\r\n}\r\n\r\nexport default cards;\r\n","// переменная для записи id таймера\r\nlet delay;\r\n\r\n// открыть окно \r\nfunction callModal(window) {\r\n    window.classList.add('show');\r\n    document.body.style.overflow = 'hidden';\r\n    // если окно было открыто, сбросить таймер для автоматического вызова\r\n    if(modalWindow.matches('.show')){\r\n        clearTimeout(delay);\r\n    }\r\n}\r\n// скрываем модальное окно\r\nfunction closeModal() {\r\n    modalWindow.classList.remove('show');\r\n    document.body.style.overflow = '';\r\n}\r\n\r\nconst modalWindow = document.querySelector('.modal');\r\n\r\nfunction modal () {\r\n    // получаем кнопку и модальное окно\r\n    const modalBtn = document.querySelectorAll('[data-modal]'),\r\n          modalClose = document.querySelector('[data-close]');\r\n\r\n    \r\n    // устанавливаем события для закрытия модальных окон\r\n    closeModalEvent();\r\n\r\n    // на все кнопки с атрибутом назначаем кликер для вызова модального окна\r\n    modalBtn.forEach(item => {\r\n        item.addEventListener('click', () => {\r\n            // при нажатии на кнопку которая в атрибуте, будет раскрывать модальное окно.\r\n            callModal(modalWindow);\r\n        });\r\n    });\r\n\r\n    // вызовем принудительно модальное окно через таймер\r\n    delayModal(modalWindow, 50000);\r\n    // вызываем модальное окно при прокрутке в низ\r\n    window.addEventListener('scroll', scrollEvent);\r\n\r\n    /* MODAL WINDOW FUNCTION */\r\n\r\n    \r\n    // устанавливаем события для закрытия модального окна\r\n    function closeModalEvent() {\r\n        // при нажатии на крестик модальное окно закрывается и возвращается прокрутка сайта\r\n        modalWindow.addEventListener('click', event => {\r\n            if(event.target.matches('[data-close]')) {\r\n                closeModal();\r\n            }\r\n        });\r\n        //при щелчке по серому фону модальное окно закрывается\r\n        modalWindow.addEventListener('click', event => {\r\n            if (event.target && event.target.matches('.modal')) {\r\n                closeModal();\r\n            }\r\n        });\r\n        // при нажатии на Esc модальное окно закрывается\r\n        document.body.addEventListener('keydown', event => {\r\n            if (event.keyCode === 27 && modalWindow.matches('.show')) {\r\n                closeModal();\r\n            }\r\n        });\r\n    }\r\n    \r\n    // открываем модальное окно через промежуток времени\r\n    function delayModal(window, time) {\r\n        delay = setTimeout( () => {\r\n            callModal(window);\r\n        }, time);\r\n    }\r\n\r\n    // вызываем модальное окно при скролинге в низ\r\n    function scrollEvent () {\r\n        if (window.pageYOffset + document.documentElement.clientHeight === document.documentElement.scrollHeight) {\r\n            callModal(modalWindow);\r\n            window.removeEventListener('scroll', scrollEvent);\r\n        }\r\n    }\r\n}\r\n\r\nexport default modal;\r\nexport {callModal, closeModal, modalWindow, delay};","import {callModal, closeModal, modalWindow} from './modal';\r\n\r\nfunction requests (sendTo) {\r\n    //получаем все формы для отправки данных\r\n    const form = document.querySelectorAll('form')\r\n    // на каждую форму вешаем слушатель отправки\r\n    form.forEach( item => {\r\n        item.addEventListener('submit', e => {\r\n            // убираем стандартное поведение submit (перезагрузку после отправки)\r\n            e.preventDefault();\r\n            // как только произошла отправка формы на сервер запускаем функцию\r\n            bindPostData(item);\r\n            // сбрасываем поля формы\r\n            item.reset();\r\n        });\r\n    });\r\n\r\n    const postData = async(url, data) => {\r\n        const res = await fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: data\r\n        });\r\n        return await res.json();\r\n    };\r\n\r\n    /* REQUEST FUNCTIONS */\r\n\r\n    // создаем обьект запроса. в аргумент помещаем форму\r\n    function bindPostData (form) {\r\n        // преобразуем данные из формы в формат форм дата\r\n        const formData = new FormData(form);\r\n        // преобразуем форм дату в json\r\n        const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n        // отправляем POST запрос на сервер\r\n        postData(sendTo, json)\r\n        // создаем функцию, которая преобразует аргумент на входе в текст и если успешно, то выполняем следующий then куда в аргументы вносим уже успешно измененнуый аргумент\r\n        .then( resolve => {\r\n            console.log(resolve)\r\n            createThanksModal('Thanks')\r\n        })\r\n        .catch( () => {\r\n            createThanksModal('Error');\r\n        })\r\n    }\r\n\r\n    function createThanksModal (text) {\r\n       // получаем поле, которое скроем для добавления текста\r\n       const modalDialog = document.querySelector('.modal__dialog');\r\n       // скрываем его добавлением класса\r\n       modalDialog.classList.add('hide');\r\n       // создаем новый див-обертку для текста\r\n       const divModal = document.createElement('div');\r\n       // назначаем класс такой же как у скрытого \r\n       divModal.classList.add('modal__dialog');\r\n       // добавляем контент\r\n       divModal.innerHTML = `\r\n            <div class=\"modal__content\">\r\n                <div data-close class=\"modal__close\">&times;</div>\r\n                <h2>${text}</h2>\r\n            </div>\r\n        `;\r\n       // вставляем в DOM\r\n       modalWindow.append(divModal);\r\n       // вызываем модалку\r\n       callModal(modalWindow);\r\n       earlyCloseModal(divModal);\r\n    }\r\n    // при закрытии текстового окна вернуть обратно форму\r\n    function returnFormBack () {\r\n       const modalDialog = document.querySelector('.modal__dialog');\r\n       // скрываем текстовое модальное окно\r\n       modalDialog.classList.remove('hide');\r\n    }\r\n    // если текстовую модалку закроют раньше или через 3 сек сама исчезнет\r\n    function earlyCloseModal (divModal) {\r\n\r\n        // модалка с ответом удаляется через 3 сек.\r\n        const timerId = setTimeout(() => {\r\n           divModal.remove();\r\n           closeModal();\r\n           //возвращаем главную форму обратно\r\n           returnFormBack();\r\n        }, 3000);\r\n\r\n         // если текстовую модалку закроют раньше, то форма вернется раньше таймера\r\n        modalWindow.addEventListener('click', event => {\r\n            if (event.target && event.target.matches('.modal')) {\r\n                closeModal();\r\n                divModal.remove();\r\n                returnFormBack();\r\n                clearTimeout(timerId)\r\n            }\r\n        });\r\n    }\r\n\r\n//    fetch('http://localhost:3000/menu')\r\n//    .then(data => data.json())\r\n//    .then(res => console.log(res))\r\n}\r\n\r\nexport default requests;\r\n","function slider ({frame, itself, prev, next, current, field, totalNumber}) {\r\n// выбираем элементы со страницы\r\n    const slideFrame = document.querySelector(frame),\r\n          slideItself = document.querySelectorAll(itself),\r\n          slidePrev = document.querySelector(prev),\r\n          slideNext = document.querySelector(next),\r\n          slideCurrent = document.querySelector(current),\r\n          slidesField = document.querySelector(field),\r\n          total = document.querySelector(totalNumber),\r\n          width = +window.getComputedStyle(slideFrame).width.replace(/\\D/g, '');\r\n\r\n    let countSlide = 0;\r\n    let offset = 0;\r\n    // общее количество слайдов равное длине массива со слайдами\r\n    total.innerHTML = addZero(slideItself.length);\r\n    // обновляем номер текущего слайда\r\n    slideNumber();\r\n\r\n    //устанавливаем блоку ширину равную ширине всех слайдов в %\r\n    slidesField.style.width = 100 * slideItself.length + '%';\r\n    slidesField.style.display ='flex';\r\n    slidesField.style.transition = '0.5s all';\r\n    slideFrame.style.overflow = 'hidden';\r\n    // устанавливаем каждому слайду ширину как у блока-окошка\r\n    slideItself.forEach( item => {\r\n        item.style.width = width;\r\n    });\r\n    // переключаем слайды по стрелке вправо\r\n    slideNext.addEventListener('click', () => {\r\n    // если положение равно ширине блока-окошка умноженное на всю длину слайдов - 1\r\n    if(offset === width * (slideItself.length - 1)) {\r\n        // установим слайдер в исходное положение\r\n        offset = 0;\r\n        // сбросим счетчик в исходное\r\n        countSlide = 0;\r\n        // закрашиваем точку открытого слайдера\r\n        markDot();\r\n    } else {\r\n        // иначе пролистаем на новый слайд задав транслэйт больше на ширину одногой слайда\r\n        offset += width;\r\n        // увеличим счетчик\r\n        countSlide++;\r\n        // закрашиваем точку открытого слайдера\r\n        markDot();\r\n    }\r\n    // смещаем слайдер\r\n    slidesField.style.transform = `translateX(-${offset}px)`;\r\n    // обновим значение текущего слайда\r\n    slideNumber();\r\n    });\r\n\r\n    // то же самое только со стрелокой в лево\r\n    slidePrev.addEventListener('click', () => {\r\n        if(offset == 0) {\r\n            offset = width * (slideItself.length - 1);\r\n            countSlide = slideItself.length - 1;\r\n            markDot();\r\n        } else {\r\n            offset -= width;\r\n            countSlide--;\r\n            markDot();\r\n        }\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n        slideNumber();\r\n    });\r\n\r\n    /* NEW SLIDER FUNCTIONS */\r\n\r\n    // обновляем номер текущего слайда\r\n    function slideNumber () {\r\n        slideCurrent.innerHTML = addZero(countSlide + 1);\r\n    }\r\n\r\n    // меняем цвет у точки с открытым слайдом\r\n    function markDot () {\r\n        // всем точкам убрать подсветку\r\n        getDots().forEach( item => {\r\n            item.style.backgroundColor = '';\r\n        });\r\n        // у точки открытого слайда добавить подсветку\r\n        getDots()[countSlide].style.backgroundColor = 'red';\r\n    }\r\n\r\n    /* SLIDER NAVIGATION */\r\n\r\n    // получаем необходимые элементы\r\n    const mainSlider = document.querySelector('.offer__slider');\r\n    // добавляем инлайн стиль для абсолютного позиционирования точек\r\n    mainSlider.style.position = 'relative';\r\n    // слушаем клики по родителю слайдера\r\n    mainSlider.addEventListener('click', e => {\r\n    // если кликнули по точке\r\n        if(e.target.matches('.dot')) {\r\n            // перебираем все точки\r\n            getDots().forEach( (item, i) => {\r\n                // удаляем подсветку у всех точек\r\n                item.style.backgroundColor = '';\r\n                // когда нашли в массиве ту точку на которую кликнули\r\n                if (item === e.target) {\r\n                    // добавляем подсветку на кликнутой точке\r\n                    item.style.backgroundColor = 'red';\r\n                    // берем ее индекс и выводим слайд под этим индексом\r\n                    countSlide = i;\r\n                    // сдвигаем слады до нужного\r\n                    offset = i * width;\r\n                    slidesField.style.transform = `translateX(-${offset}px)`;\r\n                    //обновляем текущий номер слайда\r\n                    slideNumber();\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    // создаем точки исходя из количества слайдов\r\n    const dots = document.createElement('div');\r\n\r\n    dots.classList.add('carousel-indicators');\r\n\r\n    for (let i = 0; i < slideItself.length; i++) {\r\n    dots.innerHTML += `<div class=\"dot\"></div>`;\r\n    mainSlider.append(dots);\r\n    }\r\n    // подсвечиваем точку\r\n    getDots()[0].style.backgroundColor = 'red';\r\n\r\n    /* SLIDER NAVIGATION FUNCTIONS */\r\n\r\n    function getDots () {\r\n    return document.querySelectorAll('.dot');\r\n    }\r\n    function addZero(incoming) {\r\n        if (incoming < 10) {\r\n            return `0${incoming}`;\r\n        } else {\r\n            return incoming;\r\n        }\r\n     }\r\n}\r\n\r\nexport default slider;\r\n","function tabs (tabsParent, tabsBtns, tabsWindows) {\r\n\r\n    const tabs = document.querySelector(tabsParent),  // родитель кнопок\r\n          tabsItems = tabs.querySelectorAll(tabsBtns), // все кнопки\r\n          tabContent = document.querySelectorAll(tabsWindows); // картинки\r\n\r\n    hideTab(); // скрываем перовначально все табы\r\n    showTab(); // открываем по умолчанию нулевой таб\r\n\r\n    //вешаем обработчик кликов на родителя\r\n    tabs.addEventListener('click', event => {\r\n\r\n    // если кликнули по родителю и в ивэент таргете будет класс tabheader__item\r\n    if (event.target && event.target.classList.contains(tabsBtns.slice(1))) {\r\n            // переберем весь список кнопок\r\n            tabsItems.forEach((item, i) => {\r\n                // удалим у всех табов жирненький шрифт\r\n                item.classList.remove('tabheader__item_active');\r\n                // найдем нужную кнопку из таргета и из перебора\r\n                if (event.target == item) {\r\n                    // установим только для кликнутого таба жирненький шрифт\r\n                    item.classList.add('tabheader__item_active');\r\n                    hideTab();  // скроем все картинки\r\n                    showTab(i); // откроем то на котором в цикле будет i\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    /* TABS FUNCTIONS */\r\n\r\n    // фунция скрывающая все табы кроме того, на который кликнули\r\n    function hideTab() {\r\n        tabContent.forEach(item => {\r\n            item.classList.add('hide');\r\n            item.classList.remove('show', 'fade');\r\n        });\r\n    }\r\n    // показываем таб\r\n    function showTab(i = 0) {\r\n        tabContent[i].classList.add('show', 'fade');\r\n        tabContent[i].classList.remove('hide');\r\n    }\r\n\r\n}\r\n\r\nexport default tabs;\r\n","function timer (date, timerParent) {\r\n    // устанавливаем дату до которой будем отсчитвать\r\n    const deadLine = date;\r\n    // первый аргумент - родитель с таймером, второй - дата до которой считаем\r\n    setClock(timerParent, deadLine);\r\n\r\n    /* FUNCTIONS */\r\n\r\n    // находим разницу между текущей датой и до которой будем считать в мс. Преобразуем мс в дни, часы, минуты\r\n    function getDate(deadLine) {\r\n        const time = Date.parse(deadLine) - Date.parse(new Date()),\r\n              days = Math.floor(time / (1000 * 60 * 60 * 24)),\r\n              hours = Math.floor((time / (1000 * 60 * 60)) % 24),\r\n              minutes = Math.floor((time / (1000 * 60)) % 60),\r\n              seconds = Math.floor((time / 1000) % 60);\r\n            // возвращаем обьект с готовыми данными для вставки в DOM\r\n        return {\r\n            'time': time,\r\n            'days': days,\r\n            'hours': hours,\r\n            'minutes': minutes,\r\n            'seconds': seconds\r\n        };\r\n    }\r\n    // получаем из DOM элементы, куда будем вставлять значения вемени\r\n    function setClock(selector, deadLine) {\r\n        const timer = document.querySelector(selector),\r\n              days = timer.querySelector('#days'),\r\n              hours = timer.querySelector('#hours'),\r\n              minutes = timer.querySelector('#minutes'),\r\n              seconds = timer.querySelector('#seconds'),\r\n            // обновляем счетчик каждую секунду\r\n              timeInterval = setInterval(updateClock, 1000);\r\n            // запускаем фунцию сразу, чтобы не было скачка после перезагрузки страницы\r\n        updateClock();\r\n        // записываем в DOM значения времени\r\n        function updateClock() {\r\n            const t = getDate(deadLine);\r\n\r\n            days.innerHTML = addZero(t.days);\r\n            hours.innerHTML = addZero(t.hours);\r\n            minutes.innerHTML = addZero(t.minutes);\r\n            seconds.innerHTML = addZero(t.seconds);\r\n            seconds.innerHTML = addZero(t.seconds);\r\n            // останавливаем таймер если время вышло\r\n            if (getDate.time <= 0) {\r\n                clearInterval(timeInterval);\r\n            }\r\n        }\r\n    }\r\n    // добавляем 0, если значение меньше 10\r\n    function addZero(incoming) {\r\n       if (incoming < 10) {\r\n           return `0${incoming}`;\r\n       } else {\r\n           return incoming;\r\n       }\r\n    }\r\n    \r\n}\r\n\r\nexport default timer;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import tabs from '../dist/js/modules/tabs';\r\nimport timer from '../dist/js/modules/timer';\r\nimport slider from '../dist/js/modules/slider';\r\nimport requests from '../dist/js/modules/requests';\r\nimport modal from '../dist/js/modules/modal';\r\nimport cards from '../dist/js/modules/cards';\r\nimport calculator from '../dist/js/modules/calculator';\r\n\r\n// ждем построения DOM\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n    \r\n    tabs('.tabheader__items', '.tabheader__item', '.tabcontent');\r\n    timer('2021-12-31', '.timer');\r\n    requests('http://localhost:3000/requests');\r\n    modal();\r\n    cards();\r\n    calculator();\r\n    slider({\r\n        frame: '.offer__slider-wrapper',\r\n        itself: '.offer__slide',\r\n        next: '.offer__slider-next',\r\n        prev: '.offer__slider-prev',\r\n        current: '#current',\r\n        field: '.offer__slider-inner',\r\n        totalNumber: '#total'\r\n    });\r\n\r\n});"],"names":[],"sourceRoot":""}